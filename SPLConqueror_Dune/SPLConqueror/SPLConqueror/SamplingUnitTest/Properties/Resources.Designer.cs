//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SamplingUnitTest.Properties
{
    using System;


    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SamplingUnitTest.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;4;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;4;2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;2
        ///1;1;0;0;1;0;0;1;1;0;1;0;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;0;1;0;0;0;0;0;4
        ///1;1;0;0;1;0;0;1;1;0;1;0;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;1;0;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AllbinarySampling
        {
            get
            {
                return ResourceManager.GetString("AllbinarySampling", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;1;0;0;1;1;0;0;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;1;0;0;0;0;0;0;4
        ///1;1;0;0;1;1;0;0;1;1;0;0;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;1;0;0;0;0;0;2;8
        ///1;1;0;0;1;1;0;0;1;1;0;0;0;0;0;4;8
        ///1;1;0;0;1;1;0;0;1;1;0;0;0;0;0;4;2
        ///1;1;0;0;1;1;0;0;1;1;0;0;0;0;0;2;2
        ///1;1;0;1;1;1;0;0;1;1;0;0;0;0;0;2;4
        ///1;1;0;1;1;1;0;0;1;1;0;0;0;0;0;0;4
        ///1;1;0;1;1;1;0;0;1;1;0;0;0;0;0;2;1
        ///1;1;0;1;1;1;0;0;1;1;0;0;0;0;0;2;8
        ///1;1;0 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AllbinarySampling1
        {
            get
            {
                return ResourceManager.GetString("AllbinarySampling1", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;1;0;1;0;1;0;1;0;0;1;0;0;0;2;4
        ///1;1;1;0;1;0;1;0;1;0;0;1;0;0;0;0;4
        ///1;1;1;0;1;0;1;0;1;0;0;1;0;0;0;2;1
        ///1;1;1;0;1;0;1;0;1;0;0;1;0;0;0;2;8
        ///1;1;1;0;1;0;1;0;1;0;0;1;0;0;0;4;8
        ///1;1;1;0;1;0;1;0;1;0;0;1;0;0;0;4;2
        ///1;1;1;0;1;0;1;0;1;0;0;1;0;0;0;2;2
        /// ähnelt.
        /// </summary>
        internal static string BinrandomSampling
        {
            get
            {
                return ResourceManager.GetString("BinrandomSampling", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;4;8
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;4;2
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;2;2
        /// ähnelt.
        /// </summary>
        internal static string BinrandomSampling1
        {
            get
            {
                return ResourceManager.GetString("BinrandomSampling1", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string BoxbehnkenSampling
        {
            get
            {
                return ResourceManager.GetString("BoxbehnkenSampling", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;1
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;1
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;8
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;8
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;0;1
        ///1;1;0 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string BoxbehnkenSampling1
        {
            get
            {
                return ResourceManager.GetString("BoxbehnkenSampling1", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;1;0;1;1;0;0;1;0;1;0;1;1;0;2;2
        ///1;1;1;0;1;1;0;0;1;0;0;1;0;1;1;2;4
        ///1;1;0;1;1;0;0;1;1;1;0;0;0;0;0;0;1
        ///1;1;1;0;1;0;1;0;1;0;0;1;1;1;1;2;4
        ///1;1;1;0;1;0;1;0;1;1;0;0;1;1;1;2;8
        ///1;1;0;1;1;0;0;1;1;1;0;0;0;0;0;0;4
        ///1;1;1;0;1;0;0;1;1;1;0;0;1;1;0;0;8
        ///1;1;1;0;1;1;0;0;1;0;0;1;1;1;1;2;8
        ///1;1;1;0;1;0;0;1;1;1;0;0;1;1;1;2;2
        ///1;1;0;1;1;1;0;0;1;1;0;0;0;1;1;2;1
        ///1;1;1;0;1;0;0;1;1;0;1;0;1;1; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string DistributionAwareCompleteConfigurations
        {
            get
            {
                return ResourceManager.GetString("DistributionAwareCompleteConfigurations", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;1;0;1;0;1;0;1;0;1;0;0;1;1;;
        ///1;1;1;0;1;0;1;0;1;1;0;0;1;1;0;;
        ///1;1;0;1;1;1;0;0;1;0;0;1;0;0;0;;
        ///1;1;1;0;1;0;0;1;1;0;0;1;1;1;1;;
        ///1;1;1;0;1;0;1;0;1;0;0;1;1;1;1;;
        ///1;1;0;0;1;0;0;1;1;1;0;0;0;1;0;;
        ///1;1;1;0;1;0;0;1;1;0;0;1;1;1;0;;
        ///1;1;1;0;1;1;0;0;1;0;1;0;1;1;1;;
        ///1;1;1;0;1;0;0;1;1;0;1;0;1;1;1;;
        ///1;1;1;0;1;1;0;0;1;1;0;0;0;1;1;;
        ///1;1;1;0;1;0;1;0;1;0;1;0;1;1;1;;
        ///1;1;1;0;1;1;0;0;1;1;0;0;1;1 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string DistributionAwareCompleteConfigurations1
        {
            get
            {
                return ResourceManager.GetString("DistributionAwareCompleteConfigurations1", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;1;0;1;1;0;0;1;0;1;0;1;1;1;2;4
        ///1;1;0;0;1;1;0;0;1;1;0;0;0;0;0;2;4
        ///1;1;1;0;1;0;1;0;1;0;1;0;1;1;1;2;4
        ///1;1;1;0;1;1;0;0;1;1;0;0;1;1;0;2;4
        ///1;1;1;0;1;1;0;0;1;1;0;0;0;0;0;2;4
        ///1;1;1;0;1;1;0;0;1;0;1;0;0;0;0;2;4
        ///1;1;1;0;1;0;0;1;1;1;0;0;1;1;0;2;4
        ///1;1;1;0;1;0;1;0;1;1;0;0;1;1;0;2;4
        ///1;1;1;0;1;1;0;0;1;0;1;0;0;1;0;2;4
        ///1;1;0;1;1;1;0;0;1;1;0;0;0;0;0;2;4
        ///1;1;1;0;1;1;0;0;1;1;0;0;1;1;1;2;4
        ///1;1;1 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string DistributionAwareSolverSampling
        {
            get
            {
                return ResourceManager.GetString("DistributionAwareSolverSampling", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;1;0;1;1;0;0;1;0;0;1;1;0;0;2;4
        ///1;1;1;0;1;1;0;0;1;0;0;1;0;1;1;0;4
        ///1;1;0;0;1;1;0;0;1;0;1;0;0;1;0;2;1
        ///1;1;1;0;1;1;0;0;1;0;0;1;0;1;1;0;8
        ///1;1;1;0;1;1;0;0;1;0;0;1;1;1;1;0;8
        ///1;1;0;0;1;0;0;1;1;0;1;0;0;1;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;1;0;2;8
        ///1;1;0;1;1;0;1;0;1;0;0;1;0;1;1;2;8
        ///1;1;1;0;1;0;0;1;1;1;0;0;0;1;1;2;1
        ///1;1;0;1;1;0;1;0;1;0;1;0;0;0;0;2;8
        ///1;1;1;0;1;0;1;0;1;0;1;0;1;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string DistributionPreserving
        {
            get
            {
                return ResourceManager.GetString("DistributionPreserving", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;1;1;0;0;1;1;0;1;0;0;1;0;;
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;1;1;;
        ///1;1;0;1;1;1;0;0;1;0;0;1;0;0;0;;
        ///1;1;1;0;1;0;1;0;1;0;0;1;0;1;0;;
        ///1;1;1;0;1;1;0;0;1;1;0;0;0;1;1;;
        ///1;1;0;0;1;0;0;1;1;1;0;0;0;1;0;;
        ///1;1;1;0;1;0;0;1;1;1;0;0;1;0;0;;
        ///1;1;1;0;1;0;1;0;1;0;0;1;1;1;0;;
        ///1;1;1;0;1;1;0;0;1;0;1;0;0;1;0;;
        ///1;1;1;0;1;0;0;1;1;1;0;0;0;1;0;;
        ///1;1;0;0;1;0;0;1;1;0;1;0;0;1;1;;
        ///1;1;0;1;1;0;1;0;1;0;0;1;0;1 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string DistributionPreserving1
        {
            get
            {
                return ResourceManager.GetString("DistributionPreserving1", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;4;8
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;4;2
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;2;2
        ///1;1;0;1;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;1;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;0;1;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;1;1;0;0;1;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string FeaturewiseSampling
        {
            get
            {
                return ResourceManager.GetString("FeaturewiseSampling", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;1;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;1;0;1;1;0;0;1;0;0;1;0;0;0;0;4
        ///1;1;1;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;1;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;1;0;1;1;0;0;1;0;0;1;0;0;0;4;8
        ///1;1;1;0;1;1;0;0;1;0;0;1;0;0;0;4;2
        ///1;1;1;0;1;1;0;0;1;0;0;1;0;0;0;2;2
        ///1;1;0;1;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;1;1;1;0;0;1;0;0;1;0;0;0;0;4
        ///1;1;0;1;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;1;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string FeaturewiseSampling1
        {
            get
            {
                return ResourceManager.GetString("FeaturewiseSampling1", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string HyperSampling40
        {
            get
            {
                return ResourceManager.GetString("HyperSampling40", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string HyperSampling50
        {
            get
            {
                return ResourceManager.GetString("HyperSampling50", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;1
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;8
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;1
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;2;1
        ///1;1;0 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string HyperSampling501
        {
            get
            {
                return ResourceManager.GetString("HyperSampling501", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;1;0;0;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;1;0;0;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string KexchangeSampling31
        {
            get
            {
                return ResourceManager.GetString("KexchangeSampling31", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string KexchangeSampling72
        {
            get
            {
                return ResourceManager.GetString("KexchangeSampling72", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;1
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;1
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;4
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;8
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;8
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string KexchangeSampling721
        {
            get
            {
                return ResourceManager.GetString("KexchangeSampling721", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;1;0;1;0;0;1;1;0;0;1;1;1;1;2;4
        ///1;1;1;0;1;0;0;1;1;0;0;1;1;1;1;0;4
        ///1;1;1;0;1;0;0;1;1;0;0;1;1;1;1;2;1
        ///1;1;1;0;1;0;0;1;1;0;0;1;1;1;1;2;8
        ///1;1;1;0;1;0;0;1;1;0;0;1;1;1;1;4;8
        ///1;1;1;0;1;0;0;1;1;0;0;1;1;1;1;4;2
        ///1;1;1;0;1;0;0;1;1;0;0;1;1;1;1;2;2
        ///1;1;0;1;1;1;0;0;1;0;0;1;0;1;1;2;4
        ///1;1;0;1;1;1;0;0;1;0;0;1;0;1;1;0;4
        ///1;1;0;1;1;1;0;0;1;0;0;1;0;1;1;2;1
        ///1;1;0;1;1;1;0;0;1;0;0;1;0;1; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string NegFWSampling
        {
            get
            {
                return ResourceManager.GetString("NegFWSampling", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;1;0;1;0;1;0;1;0;1;0;1;1;1;2;4
        ///1;1;1;0;1;0;1;0;1;0;1;0;1;1;1;0;4
        ///1;1;1;0;1;0;1;0;1;0;1;0;1;1;1;2;1
        ///1;1;1;0;1;0;1;0;1;0;1;0;1;1;1;2;8
        ///1;1;1;0;1;0;1;0;1;0;1;0;1;1;1;4;8
        ///1;1;1;0;1;0;1;0;1;0;1;0;1;1;1;4;2
        ///1;1;1;0;1;0;1;0;1;0;1;0;1;1;1;2;2
        ///1;1;1;0;1;0;1;0;1;0;0;1;1;1;1;2;4
        ///1;1;1;0;1;0;1;0;1;0;0;1;1;1;1;0;4
        ///1;1;1;0;1;0;1;0;1;0;0;1;1;1;1;2;1
        ///1;1;1;0;1;0;1;0;1;0;0;1;1;1;1;2;8
        ///1;1;1 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string NegFWSampling1
        {
            get
            {
                return ResourceManager.GetString("NegFWSampling1", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string OnefactorSampling3
        {
            get
            {
                return ResourceManager.GetString("OnefactorSampling3", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;2
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string OnefactorSampling5
        {
            get
            {
                return ResourceManager.GetString("OnefactorSampling5", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;4
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;4
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;1
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;2;1
        ///1;1;0 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string OnefactorSampling51
        {
            get
            {
                return ResourceManager.GetString("OnefactorSampling51", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;4;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;4;2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;2
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string PairwiseSampling
        {
            get
            {
                return ResourceManager.GetString("PairwiseSampling", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;4
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;4
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;1
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;8
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;4;8
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;4;2
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;2
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string PairwiseSampling1
        {
            get
            {
                return ResourceManager.GetString("PairwiseSampling1", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string PlackettSampling39
        {
            get
            {
                return ResourceManager.GetString("PlackettSampling39", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;4
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;8
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;1
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;8
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;4
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string PlackettSampling391
        {
            get
            {
                return ResourceManager.GetString("PlackettSampling391", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string PlackettSampling5125
        {
            get
            {
                return ResourceManager.GetString("PlackettSampling5125", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;1;3
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;1;0
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;1;2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;2
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string RandomSampling010
        {
            get
            {
                return ResourceManager.GetString("RandomSampling010", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;1;0
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;1;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;1;3
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;1;2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string RandomSampling112
        {
            get
            {
                return ResourceManager.GetString("RandomSampling112", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;1
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;1
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;2
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;2
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;4
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;4
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;0;8
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;2;8
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;2
        ///1;1;0 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string RandomSampling1121
        {
            get
            {
                return ResourceManager.GetString("RandomSampling1121", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;4;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;4;2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;2
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string TwiseSampling2
        {
            get
            {
                return ResourceManager.GetString("TwiseSampling2", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;0;4
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;4;8
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;4;2
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;2;2
        ///1;1;0;0;1;0;0;1;1;1;0;0;0;0;0;2;4
        ///1;1;0;0;1;0;0;1;1;1;0;0;0;0;0;0;4
        ///1;1;0;0;1;0;0;1;1;1;0;0;0;0;0;2;1
        ///1;1;0;0;1;0;0;1;1;1;0;0;0;0; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string TwiseSampling3
        {
            get
            {
                return ResourceManager.GetString("TwiseSampling3", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root;binOpt1;binOpt2;binOpt3;group;member1;member2;member3;group2;member21;member22;member23;binOpt4;binOpt6;binOpt5;numOpt1;numOpt2
        ///1;1;0;0;1;0;1;0;1;0;1;0;0;0;0;;
        ///1;1;0;0;1;1;0;0;1;0;0;1;0;0;0;;
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;0;0;;
        ///1;1;0;0;1;0;0;1;1;0;0;1;0;0;0;;
        ///1;1;0;0;1;0;0;1;1;1;0;0;0;0;0;;
        ///1;1;0;0;1;0;0;1;1;0;1;0;0;0;0;;
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;1;0;;
        ///1;1;0;0;1;0;1;0;1;0;0;1;0;1;1;;
        ///1;1;1;0;1;1;0;0;1;0;0;1;0;0;0;;
        ///1;1;1;0;1;0;1;0;1;0;0;1;0;0;0;;
        ///1;1;1;0;1;0;0;1;1;0;0;1;0;0;0;;
        ///1;1;1;0;1;0;0;1;1;1;0;0;0;0 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string TwiseSampling31
        {
            get
            {
                return ResourceManager.GetString("TwiseSampling31", resourceCulture);
            }
        }
    }
}
